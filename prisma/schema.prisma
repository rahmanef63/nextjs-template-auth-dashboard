// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  role          Role      @relation(fields: [roleId], references: [id])
  roleId        String
  profile       Profile?
  sessions      Session[]
  createdReports Report[] @relation("ReportCreator")
  assignedReports Report[] @relation("AssignedTo")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?

  @@index([email])
}

model Role {
  id          String       @id @default(cuid())
  name        String       @unique
  users       User[]
  permissions Permission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Permission {
  id        String   @id @default(cuid())
  name      String   @unique
  roles     Role[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id        String   @id @default(cuid())
  bio       String?
  avatarUrl String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String   @id @default(cuid())
  sessionId String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Report {
  id          String   @id @default(cuid())
  title       String
  content     String
  status      String   @default("PENDING")
  createdBy   User     @relation("ReportCreator", fields: [creatorId], references: [id])
  creatorId   String
  assignedTo  User     @relation("AssignedTo", fields: [assignedId], references: [id])
  assignedId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([creatorId])
  @@index([assignedId])
}

model Widget {
  id            String   @id @default(cuid())
  name          String
  type          String
  configuration String   // Changed from Json to String for SQLite compatibility
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
